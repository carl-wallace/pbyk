[package]
name = "pbyklib"
version = "0.2.0"
edition = "2024"
rust-version = "1.88.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
pbykcorelib = {path = "../pbykcorelib"}

base64ct = { version="1.8.0", features = ["alloc"] }
# EnvelopedDataBuilder is not yet released, hence use of private branch
cms = {version = "0.3.0-pre.0"}
# todo - replace openssl P12 usage with pkcs12 crate
# pkcs12 = {version = "0.0.0", git = "https://github.com/carl-wallace/formats.git", branch = "pbyk"}
const-oid = { version = "0.10.1", features = ["db"] }
der = { version = "0.8.0-rc.6", features = ["alloc", "derive", "oid", "pem"] }
spki = "0.8.0-rc.3"
x509-cert = "0.3.0-rc.0"

# certval has not yet been released, hence use of private branch
certval = { git = "https://github.com/carl-wallace/rust-pki.git", features = ["std", "rsa"], branch = "c7"}

aes = "0.9.0-rc.0"
cipher = "0.5.0-rc.0"
cbc = "0.2.0-rc.0"
pkcs1 = "0.8.0-rc.3"
rsa = { version = "0.10.0-rc.3", features = ["sha2"] }
sha1 = {version = "0.11.0-rc.0", default-features = false}
sha2 = "0.11.0-rc.0"
signature = { version = "3.0.0-rc.2", features = ["digest", "alloc"]}

home = "0.5.11"
log = "0.4.27"
plist = "1.7.1"
rand_core = { version = "0.9.3", features = ["std", "os_rng"] }
reqwest = {version = "0.12.22", features = ["rustls-tls", "multipart", "blocking"]}
serde = { version = "1.0.219", default-features = false, features = ["derive"] }
serde_json = "1.0.140"
subtle = { version = "2.6.1", default-features = false }
tokio = { version = "1.46.1", features = ["full", "time", "rt-multi-thread"]}
uuid = { version = "1.17.0", features = ["v4"] }
# the yubikey fork features a length check needed when pbyk is run in presence of some middleware. use fork until upstream is updated with length check added to form.
#yubikey = { version = "0.8.0", features = ["untested"] }
yubikey = {git = "https://github.com/carl-wallace/yubikey.rs.git", branch = "aes_mgmt", features = ["untested"]}
zeroize = "1.8.1"

openssl = {version = "0.10.73", features = ["vendored"]}

pb_pki = {git="https://github.com/carl-wallace/pb_pki.git", branch = "updates"}

[dev-dependencies]
hex-literal = "1.0.0"
log4rs = "1.3.0"

[target.'cfg(windows)'.dependencies]
windows = {version = "0.61.3", features = [
    "Devices_Enumeration", "Devices_SmartCards", "Foundation_Collections", 
    "Security_Cryptography", "Security_Cryptography_Certificates", "Security_Cryptography_Core", "Security_ExchangeActiveSyncProvisioning",
    "Storage_Streams", "System_Profile",
    "Win32_Foundation", "Win32_Security", "Win32_Security_Cryptography"] }

[features]
default = ["dev"]
dev = ["pb_pki/dev"]
om_nipr = ["pb_pki/om_nipr"]
om_sipr = ["pb_pki/om_sipr"]
nipr = ["pb_pki/nipr"]
sipr = ["pb_pki/sipr"]
vsc = []
reset_vsc = [] # this feature exists to quarantine non-functional VSC reset code. do not use.
