//! Clap-based arguments

use clap::Parser;
use yubikey::Serial;

/// Defines options used by the pbyk utility
///
/// ```bash
/// Usage: pbyk [OPTIONS]
///
/// Options:
///   -h, --help     Print help (see more with '--help')
///   -V, --version  Print version
///
/// Arguments:
///   -a, --agent-edipi <AGENT_EDIPI>  EDIPI of Purebred Agent who provided the pre_enroll_otp or enroll_otp value
///   -s, --serial <SERIAL>            Serial number of YubiKey to provision (available YubiKeys can be listed using list_yubikeys)
///
/// Actions:
///   -1, --pre-enroll-otp <PRE_ENROLL_OTP>
///           Pre-enrollment OTP provided by Purebred Agent identified by agent_edipi
///   -2, --enroll-otp <ENROLL_OTP>
///           Enrollment OTP provided by Purebred Agent identified by agent_edipi
///   -3, --ukm-otp <UKM_OTP>
///           OTP generated by user associated with the device on the Purebred portal
///   -4, --recover-otp <RECOVER_OTP>
///           OTP generated by user associated with the device on the Purebred portal
///
/// Utilities:
///   -l, --list-yubikeys  Lists available YubiKey devices, if any
///   -r, --reset-yubikey  Resets the indicated YubiKey to a default state using a management key expected by Purebred applications
///
/// Logging:
///       --logging-config <LOGGING_CONFIG>
///           Full path and filename of YAML-formatted configuration file for log4rs logging mechanism. See <https:///docs.rs/log4rs/latest/log4rs/> for details
///   -c, --log-to-console
///           Log info and above level output to the console (in addition to any destinations specified by logging_config)
/// ```
#[derive(Parser, Debug)]
#[command(arg_required_else_help(true))]
#[command(author, version, about = "", long_about = "")]
pub struct PbYkArgs {
    /// EDIPI of Purebred Agent who provided the pre_enroll_otp or enroll_otp value
    #[clap(
        long,
        short = 'a',
        help_heading = "Arguments",
        conflicts_with = "ukm_otp",
        conflicts_with = "recover_otp",
        conflicts_with = "list_yubikeys",
        conflicts_with = "reset_yubikey"
    )]
    pub agent_edipi: Option<String>,

    /// Serial number of YubiKey to provision (available YubiKeys can be listed using list_yubikeys)
    #[clap(
        long,
        short = 's',
        help_heading = "Arguments",
        conflicts_with = "list_yubikeys"
    )]
    pub serial: Option<Serial>,

    /// Pre-enrollment OTP provided by Purebred Agent identified by agent_edipi
    #[clap(
        long,
        short = '1',
        action,
        help_heading = "Actions",
        conflicts_with = "enroll_otp",
        conflicts_with = "ukm_otp",
        conflicts_with = "recover_otp",
        requires = "agent_edipi",
        requires = "serial"
    )]
    pub pre_enroll_otp: Option<String>,
    #[clap(
        long,
        short = '2',
        action,
        help_heading = "Actions",
        conflicts_with = "pre_enroll_otp",
        conflicts_with = "ukm_otp",
        conflicts_with = "recover_otp",
        requires = "agent_edipi",
        requires = "serial"
    )]
    /// Enrollment OTP provided by Purebred Agent identified by agent_edipi
    pub enroll_otp: Option<String>,

    /// OTP generated by user associated with the device on the Purebred portal
    #[clap(
        long,
        short = '3',
        action,
        help_heading = "Actions",
        conflicts_with = "pre_enroll_otp",
        conflicts_with = "enroll_otp",
        conflicts_with = "agent_edipi",
        conflicts_with = "recover_otp",
        requires = "serial"
    )]
    pub ukm_otp: Option<String>,

    /// OTP generated by user associated with the device on the Purebred portal
    #[clap(
        long,
        short = '4',
        action,
        help_heading = "Actions",
        conflicts_with = "pre_enroll_otp",
        conflicts_with = "enroll_otp",
        conflicts_with = "ukm_otp",
        conflicts_with = "agent_edipi",
        requires = "serial"
    )]
    pub recover_otp: Option<String>,

    /// Lists available YubiKey devices, if any
    #[clap(
        long,
        short,
        action,
        help_heading = "Utilities",
        conflicts_with = "pre_enroll_otp",
        conflicts_with = "enroll_otp",
        conflicts_with = "ukm_otp",
        conflicts_with = "agent_edipi"
    )]
    pub list_yubikeys: bool,

    /// Resets the indicated YubiKey to a default state using a management key expected by Purebred applications
    #[clap(
        long,
        short,
        action,
        help_heading = "Utilities",
        conflicts_with = "pre_enroll_otp",
        conflicts_with = "enroll_otp",
        conflicts_with = "ukm_otp",
        conflicts_with = "agent_edipi",
        conflicts_with = "list_yubikeys",
        requires = "serial"
    )]
    pub reset_yubikey: bool,

    /// Full path and filename of YAML-formatted configuration file for log4rs logging mechanism.
    /// See <https://docs.rs/log4rs/latest/log4rs/> for details.
    #[clap(
        long,
        action,
        help_heading = "Logging",
        conflicts_with = "log_to_console"
    )]
    pub logging_config: Option<String>,

    /// Log output to the console (in addition to any destinations specified by logging_config)
    #[clap(
        long,
        short = 'c',
        action,
        help_heading = "Logging",
        conflicts_with = "logging_config"
    )]
    pub log_to_console: bool,
}
